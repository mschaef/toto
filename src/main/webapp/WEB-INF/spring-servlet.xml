<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/mvc
                           http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-3.0.xsd">

  <mvc:annotation-driven />

  <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
    <property name="templateLoaderPath" value="/WEB-INF/views/"/>
  </bean>

  <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
    <property name="cache" value="true"/>
    <property name="prefix" value=""/>
    <property name="suffix" value=".ftl"/>
  
    <!-- if you want to use the Spring FreeMarker macros, set this property to true -->
    <property name="exposeSpringMacroHelpers" value="true"/>
  </bean>


  <bean id="dataSource"
        class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
    <constructor-arg>
      <bean class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="org.h2.Driver" />
        <property name="url"
                  value="jdbc:h2:~/ectworks/toto/toto.h2db" />
        <property name="username" value="sa"/>
        <property name="password" value=""/>  
      </bean>
    </constructor-arg>
  </bean>

  <!-- provides a H2 console to look into the db if necessary -->
  <bean id="h2console" class="org.h2.tools.Server" 
        factory-method="createWebServer" depends-on="dataSource" 
        init-method="start" lazy-init="false">
    <constructor-arg value="-web,-webPort,11111" />
  </bean>

  <bean id="userDao"
        class="com.ectworks.toto.dao.UserDao"
        p:dataSource-ref="dataSource"/>

  <bean id="todoItemDao"
        class="com.ectworks.toto.dao.TodoItemDao"
        p:dataSource-ref="dataSource"
        p:userDao-ref="userDao"/>

  <bean id="loginController"
        class="com.ectworks.toto.web.controller.LoginController"
        p:realm-ref="userDaoRealm"/>

  <bean id="userController"
        class="com.ectworks.toto.web.controller.UserController"
        p:userDao-ref="userDao"/>

  <bean id="testController"
        class="com.ectworks.toto.web.controller.HelloWorldController"/>

  <bean id="todoListController"
        class="com.ectworks.toto.web.controller.TodoListController"
        p:todoItemDao-ref="todoItemDao"/>


  <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
    <property name="securityManager" ref="securityManager"/>
    <property name="loginUrl" value="/login"/>
    <property name="successUrl" value="/todo"/>
    <property name="unauthorizedUrl" value="/unauthorized"/>

    <property name="filterChainDefinitions">
      <value>
        / = anon
        /add-user = anon
        /unauthorized = anon
        /login = anon
        /classpath = anon
        /favicon.ico = anon

        /todo = authc

        # some example chain definitions:
        # /admin/** = authc, roles[admin]
        # /docs/** = authc, perms[document:read]
        # /** = authc
        # /login = anon
        # /resources/** = anon
        # /workspace/** = authc, roles[workspace]

        # more URL-to-FilterChain definitions here
      </value>
    </property>
  </bean>
  
  <bean id="securityManager"
        class="org.apache.shiro.web.mgt.DefaultWebSecurityManager"
        p:realm-ref="userDaoRealm"/>

  <bean id="lifecycleBeanPostProcessor"
        class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

  <bean id="userDaoRealm" class="com.ectworks.toto.auth.UserDaoRealm"
        p:userDao-ref="userDao"/>

</beans>